"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const __1 = tslib_1.__importStar(require(".."));
const payload = {
    context: {},
    state: {},
    effects: [{ type: 'initialize' }],
    config: undefined
};
describe('CustomFieldEdit', () => {
    it('renders correctly', async () => {
        const noop = () => { };
        expect(await (0, __1.render)(__1.default.createElement(__1.CustomFieldEdit, { onSubmit: noop },
            __1.default.createElement(__1.TextField, { label: "Label", name: "name" })))(payload, {})).toMatchSnapshot();
    });
    it('calls onSubmit callback when Save button is clicked', async () => {
        const onSubmitMock = jest.fn();
        const formDataMock = {
            name: 'Atlassian'
        };
        const formSubmitPayload = {
            context: {},
            state: {},
            effects: [
                {
                    type: 'event',
                    handler: { componentKey: 'Form.0', prop: 'onSubmit' },
                    args: [formDataMock]
                }
            ],
            config: undefined
        };
        await (0, __1.render)(__1.default.createElement(__1.CustomFieldEdit, { onSubmit: onSubmitMock },
            __1.default.createElement(__1.TextField, { label: "Label", name: "name" })))(formSubmitPayload, {});
        expect(onSubmitMock).toBeCalledWith(formDataMock);
    });
});
